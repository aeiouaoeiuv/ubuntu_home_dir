# version checking
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
    sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'
if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | bc)" = 1 ]' " \
    display 'tmux version < 3.0';"

# ssh connection ip
run-shell "tmux setenv -g TMUX_SSH_IP $(echo $SSH_CONNECTION | awk \'{print $3}\')"

# remap prefix command
unbind-key C-b
set -g prefix M-q # alt+q

# navigate panes with hjkl
bind-key -r h select-pane -L       # prefix+h
bind-key -r j select-pane -D       # prefix+j
bind-key -r k select-pane -U       # prefix+k
bind-key -r l select-pane -R       # prefix+l
bind-key -n M-H select-pane -L     # alt+shift+h
bind-key -n M-J select-pane -D     # alt+shift+j
bind-key -n M-K select-pane -U     # alt+shift+k
bind-key -n M-L select-pane -R     # alt+shift+l

# navigate window
bind-key -r p previous-window      # prefix+p
bind-key -r n next-window          # prefix+n

# navigate window without prefix
bind-key -n M-P previous-window    # alt+shift+p
bind-key -n M-N next-window        # alt+shift+n
bind-key -n M-! select-window -t 1 # alt+shift+1
bind-key -n M-@ select-window -t 2 # alt+shift+2
bind-key -n M-# select-window -t 3 # alt+shift+3
bind-key -n M-$ select-window -t 4 # alt+shift+4
bind-key -n M-% select-window -t 5 # alt+shift+5
bind-key -n M-^ select-window -t 6 # alt+shift+6
bind-key -n M-& select-window -t 7 # alt+shift+7
bind-key -n M-* select-window -t 8 # alt+shift+8
bind-key -n M-( select-window -t 9 # alt+shift+9

# resize pane
bind-key -r H resize-pane -L 2     # prefix+shift+h
bind-key -r J resize-pane -D 2     # prefix+shift+j
bind-key -r K resize-pane -U 2     # prefix+shift+k
bind-key -r L resize-pane -R 2     # prefix+shift+l

# split window with '|' & '-'
unbind-key '%'
bind-key | split-window -h -c "#{pane_current_path}" # prefix+shift+\
unbind-key '"'
bind-key - split-window -v -c "#{pane_current_path}" # prefix+shift+-
unbind-key 'c'
bind-key c new-window -c "#{pane_current_path}"    # prefix+c
bind-key C new-window -c "#{pane_current_path}" -d # prefix+shift+c, create window on background
unbind-key '['
bind-key u copy-mode # prefix+u
unbind-key ']'
bind-key -T prefix v run-shell "xclip -o | tmux load-buffer - && tmux paste-buffer" # prefix+v

# copy mode like vim, old version of tmux unsupport these commands
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

bind-key -T copy-mode-vi 'y' \
    send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard" \; \
    send-keys -X clear-selection

bind-key -T copy-mode-vi 'p' \
    send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard" \; \
    run-shell "xclip -o | tmux load-buffer - && tmux paste-buffer" \; \
    send-keys -X cancel

bind-key -T copy-mode-vi 'P' \
    send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard" \; \
    run-shell "xclip -o | tmux load-buffer - && tmux paste-buffer" \; \
    run-shell "sleep 0.5" \; \
    send-keys -X refresh-from-pane

bind-key -T copy-mode-vi 'x' send-keys -X clear-selection

# closing pane, and closing popup if there is only one pane left
bind-key -T prefix x run-shell " \
    if [ \"$(tmux list-sessions | grep -c \"popup\")\" = \"1\" ] && [ \"$(tmux list-windows | wc -l)\" = \"1\" ] && [ \"$(tmux list-panes | wc -l)\" = \"1\" ]; then \
        tmux kill-session -t popup; \
    fi; \
    tmux kill-pane -t '#{pane_index}'" # prefix+x

# closing window,, and closing popup if there is only one window left
unbind-key '&'
bind-key -T prefix X run-shell " \
    if [ \"$(tmux list-sessions | grep -c \"popup\")\" = \"1\" ] && [ \"$(tmux list-windows | wc -l)\" = \"1\" ]; then \
        tmux kill-session -t popup; \
    fi; \
    tmux kill-window -t '#{window_index}'" # prefix+shift+x

# respawn current pane/window
unbind-key 'r'
bind-key r respawn-pane -k -c "#{pane_current_path}" \; clear-history   # prefix+r
bind-key R respawn-window -k -c "#{pane_current_path}" \; clear-history # prefix+shift+r

# The -n after bind-key makes it so you don't have to issue the tmux command prefix (ctrl-b by default)
bind-key C-l send-keys -R \; clear-history \; send-keys C-l # prefix+ctrl+l

bind-key < swap-window -t -1 # prefix+shift+,
bind-key > swap-window -t +1 # prefix+shift+.
bind-key Tab last-window     # prefix+tab
bind-key -T prefix m run-shell " \
    if [ \"$(tmux display-message -p -F \"#{session_name}\")\" = \"popup\"  ]; then \
        tmux detach-client; \
    else \
        tmux popup -d '#{pane_current_path}' -w 96% -h 92% -E \"tmux attach -t popup || tmux new -s popup\"; \
    fi" # prefix+m

set -g status-justify left
set -g status-position top

set -g status-left "#{?TMUX_SSH_IP,#[fg=#f1d6be#,bg=#36ac9d] :#{TMUX_SSH_IP} #[fg=#36ac9d#,bg=#3b8bb9],}#[fg=#e1d6d1,bg=#3b8bb9] 况:#S 者:#I/#{session_windows} 﩯:#P/#{window_panes} #{?client_prefix,#[fg=#3b8bb9#,bg=#99e995] #[fg=#2c467f] #[fg=#99e995#,bg=default],#[fg=#3b8bb9#,bg=default]}"
set -g status-left-length 0

set -g window-status-current-format "#[fg=#e1e4a2,bg=default,reverse]#[fg=#316d88,bg=#e1e4a2,noreverse,bold]#{?window_zoomed_flag, #[bold]缾 ZOOM, #{window_index}}  #{window_name} #[fg=#e1e4a2,bg=default]"
set -g window-status-format "#[fg=#974274,bg=default,reverse]#{?window_last_flag,#[bold],}#[fg=#f6da40,bg=#974274,noreverse] #{window_index} #{window_name}#{?window_activity_flag,*,} #[fg=#974274,bg=default]"
set -g window-status-separator ""
set -g window-status-activity-style ""

set -g status-right ""
set -g status-style bg=default

set -g pane-active-border-style fg=#ecd61c
set -g pane-border-style fg=#508090

set -g mode-style fg=#f9fbe7,bg=#ad1457

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc" # support true color
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -s escape-time 0
set -g wrap-search off
set -g display-time 3000
set -g display-panes-time 5000
set -g monitor-activity on
set -g visual-activity off
set -g status-keys vi # Use vi key bindings in status line for command prompt
set -g status-interval 0
set -g monitor-silence 0
set -g mouse off
set -g history-limit 10000
set -g repeat-time 1500

setw -g mode-keys vi
setw -g allow-rename on
setw -g automatic-rename on

