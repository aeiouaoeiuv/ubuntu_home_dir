# version checking
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
    sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'
if-shell -b '[ "$(echo "$TMUX_VERSION < 3.0" | bc)" = 1 ]' " \
    display 'tmux version < 3.0';"

# ssh connection ip
run-shell "tmux setenv -g TMUX_SSH_IP $(echo $SSH_CONNECTION | awk \'{print $3}\')"

# remap prefix command
unbind-key C-b
set -g prefix M-q

# navigate panes with hjkl
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -n M-H select-pane -L # alt+shift+h
bind-key -n M-J select-pane -D # alt+shift+j
bind-key -n M-K select-pane -U # alt+shift+k
bind-key -n M-L select-pane -R # alt+shift+l

# resize pane
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

# split window with '|' & '-'
unbind-key '%'
bind-key | split-window -h -c "#{pane_current_path}"
unbind-key '"'
bind-key - split-window -v -c "#{pane_current_path}"
unbind-key 'c'
bind-key c new-window -c "#{pane_current_path}"
bind-key C new-window -c "#{pane_current_path}" -d # create window on background
unbind-key '['
bind-key u copy-mode
unbind-key ']'
bind-key -T prefix v run-shell "xclip -o | tmux load-buffer - && tmux paste-buffer"

# copy mode like vim, old version of tmux unsupport these commands
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe "xclip -i -f -selection primary | xclip -i -selection clipboard" \; send-keys -X clear-selection # install xclip first
bind-key -T copy-mode-vi 'x' send-keys -X clear-selection

# closing without confirm
bind-key x kill-pane
unbind-key '&'
bind-key X kill-window

# respawn current pane/window
unbind-key 'r'
bind-key r respawn-pane -k -c "#{pane_current_path}" \; clear-history
bind-key R respawn-window -k -c "#{pane_current_path}" \; clear-history

# The -n after bind-key makes it so you don't have to issue the tmux command prefix (ctrl-b by default)
bind-key C-l send-keys -R \; clear-history \; send-keys C-l

bind-key < swap-window -t -1
bind-key > swap-window -t +1
bind-key Tab last-window

set -g status-justify left
set -g status-position top

# \uE0B0 is 
# \uE0B1 is 
# \uE0B2 is 
# \u204B is ⁋
set -g status-left "#{?TMUX_SSH_IP,#[fg=#f1d6be#,bg=#36ac9d] #{TMUX_SSH_IP} #[fg=#36ac9d#,bg=#3b8bb9]\uE0B0,}#[fg=#e1d6d1,bg=#3b8bb9] ses=#S win=#I/#{session_windows} pane=#P/#{window_panes} #{?client_prefix,#[fg=#3b8bb9#,bg=#99e995]\uE0B0 #[fg=#2c467f]\u204B #[fg=#99e995#,bg=default]\uE0B0,#[fg=#3b8bb9#,bg=default]\uE0B0}"
set -g status-left-length 0

set -g window-status-current-format "#[fg=#e1e4a2,bg=default,reverse]\uE0B0#[fg=#316d88,bg=#e1e4a2,noreverse,bold] #{window_index} \uE0B1 #{window_name} #[fg=#e1e4a2,bg=default]\uE0B0"
set -g window-status-format "#[fg=#974274,bg=default,reverse]\uE0B0#{?window_last_flag,#[bold],}#[fg=#f6da40,bg=#974274,noreverse] #{window_index} #{window_name}#{?window_activity_flag,*,} #[fg=#974274,bg=default]\uE0B0"
set -g window-status-separator ""
set -g window-status-activity-style ""

set -g status-right "#{?window_zoomed_flag,#[fg=#e02c6d#,bg=default]\uE0B2#[fg=#ffffff#,bg=#e02c6d#,bold] ZOOM ,}"
set -g status-style bg=default

set -g pane-active-border-style fg=#ecd61c
set -g pane-border-style fg=#508090

set -g mode-style fg=#ffffff,bg=#d32f2f

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc" # support true color
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -s escape-time 0
set -g wrap-search off
set -g display-time 3000
set -g display-panes-time 5000
set -g monitor-activity on
set -g visual-activity off
set -g status-keys vi # Use vi key bindings in status line for command prompt
set -g status-interval 0
set -g monitor-silence 0
set -g mouse off
set -g history-limit 10000
set -g repeat-time 1000

setw -g mode-keys vi
setw -g allow-rename on
setw -g automatic-rename on

